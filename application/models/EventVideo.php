<?php

/**
 * EventVideo.
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @author     ##NAME## <##EMAIL##>
 *
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class EventVideo extends Table_EventVideo
{
    const YT_LINK_PREFIX = 'https://www.youtube.com/watch?v=';

    public function setVideoLink($value)
    {
        return $this->key = $this->parse_yturl($value);
    }

    public function getVideoLink()
    {
        return self::YT_LINK_PREFIX . $this->key;
    }

    public function getVideoKey()
    {
        return $this->key;
    }

    public function getVideoPhoto()
    {
        return 'https://img.youtube.com/vi/' . $this->getVideoKey() . '/0.jpg';
    }

    public function parse_yturl($url)
    {
        $pattern = '#^(?:https?://)?'; // Optional URL scheme. Either http or https.
        $pattern .= '(?:www\.)?'; // Optional www subdomain.
        $pattern .= '(?:'; // Group host alternatives:
        $pattern .= 'youtu\.be/'; // Either youtu.be,
        $pattern .= '|youtube\.com'; // or youtube.com
        $pattern .= '(?:'; // Group path alternatives:
        $pattern .= '/embed/'; // Either /embed/,
        $pattern .= '|/v/'; // or /v/,
        $pattern .= '|/watch\?v='; // or /watch?v=,
        $pattern .= '|/watch\?.+&v='; // or /watch?other_param&v=
        $pattern .= ')'; // End path alternatives.
        $pattern .= ')'; // End host alternatives.
        $pattern .= '([\w-]{11})'; // 11 characters (Length of Youtube video ids).
        $pattern .= '(?:.+)?$#x'; // Optional other ending URL parameters.
        preg_match($pattern, $url, $matches);

        return (isset($matches[1])) ? $matches[1] : false;
    }
}
