<?php

/**
 * ExhibEventTvMovie.
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @author     ##NAME## <##EMAIL##>
 *
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class ExhibEventTvMovie extends Table_ExhibEventTvMovie
{
    public $movie_ext = ['flv'];

    public static function getArrayTvMovies()
    {
        return [3, 4, 5, 6];
    }

    public static function getTvMovieName($tv_number)
    {
        return 'tv_' . $tv_number . '_movie';
    }

    public function getId()
    {
        return $this->id_exhib_event_tv_movie;
    }

    public function getHash()
    {
        return $this->hash;
    }

    public function getTvMovieImageLink()
    {
//        if($this->tv_movie_image_url == '')
//            return '';
//
//         if(stristr($this->tv_movie_image_url, "http://") !== FALSE){
//            return $this->tv_movie_image_url;
//        }

        return $this->tv_movie_image_url;
    }

    public function setTvMovieImageLink($value)
    {
        if (!empty($value) && false === mb_stristr($value, 'http://')) {
            $value = 'http://' . $value;
        }

        $this->tv_movie_image_url = $value;
    }

    /**
     * Metody do plikow.
     *
     * @param mixed $name
     */
    public function deleteViewFile($name)
    {
        if (!empty($name)) {
            if ($this->viewFileExists($name)) {
                unlink($this->getRelativeViewFile($name));
            }
            $this->setViewFileExt('');
        }
    }

    public function setViewFileExt($ext)
    {
        $this->tv_movie_ext = $ext;
    }

    public function getViewFileExt()
    {
        return $this->tv_movie_ext;
    }

    public function viewFileExists($name)
    {
        if (!empty($this->tv_movie_ext) && file_exists($this->getRelativeViewFile($name))) {
            return true;
        }

        return false;
    }

    public function getRelativeViewFile($name)
    {
        return $this->getAbsoluteViewFilePath(true) . DS . $this->getViewFileName($name);
    }

    public function getAbsoluteViewFilePath($createDir = true)
    {
        $relativePath = $this->Event->BaseUser->getPublicRelativePath($createDir);
        if ($createDir) {
            $utils = Engine_Utils::getInstance();
            $relativePath = $utils->createDirWithPath($relativePath, ExhibEvent::EVENT_DIR, '/');
        } else {
            $relativePath = $relativePath . DS . ExhibEvent::EVENT_DIR;
        }

        return $relativePath;
    }

    public function getViewFileName($name, $type = '', $event = null)
    {
        $event = null === $event ? $this->Event : $event;
        if (!empty($type)) {
            $type = '_' . $type;
        }

        return $name . '_' . $event->hash . $type . '.' . $this->getViewFileExt();
    }

    public function getBrowserViewFilePath($event = null)
    {
        $event = null === $event ? $this->Event : $event;

        return $event->BaseUser->getPublicBrowserPath() . '/' . ExhibEvent::EVENT_DIR;
    }

    public function getBrowserViewFile($name = null, $event = null)
    {
        if (empty($name) && !empty($this->tv_number)) {
            $name = $this->getTvMovieName($this->tv_number);
        }

        return !empty($name) ? $this->getBrowserViewFilePath($event) . '/' . $this->getViewFileName($name, null, $event) : false;
    }

    public function fileTvIsMovie()
    {
        if (!empty($this->tv_movie_ext)) {
            return in_array($this->tv_movie_ext, $this->movie_ext, true);
        }

        return false;
    }

    public function isNew()
    {
        return null === $this->getId();
    }

    public static function findOneByHash($hash)
    {
        $query = Doctrine_Query::create()
            ->from('ExhibEventTvMovie etm')
            ->where('etm.hash = ?', [$hash])
        ;

        return $query->execute()->getFirst();
    }

    /**
     * @param string $tv_movie_name
     *
     * @return ExhibEventTvMovie
     */
    public function getOneByTvMovieName($tv_movie_name)
    {
        if (!$this->Event->isNew()) {
            $query = Doctrine_Query::create()
                ->from('ExhibEventTvMovie etm')
                ->where('etm.tv_movie_name = ? AND etm.id_event = ?', [$tv_movie_name, $this->Event->getId()])
            ;

            return $query->execute()->getFirst();
        }

        return false;
    }

    /**
     * @param int   $tv_number
     * @param mixed $event_id
     *
     * @return ExhibEventTvMovie
     */
    public static function getOneByEventIdAndTvNumber($event_id, $tv_number)
    {
        if (!empty($event_id)) {
            $query = Doctrine_Query::create()
                ->from('ExhibEventTvMovie etm')
                ->where('etm.tv_number = ? AND etm.id_event = ?', [$tv_number, $event_id])
            ;

            return $query->execute()->getFirst();
        }

        return false;
    }

    /**
     * @param int $event_id
     *
     * @return ExhibEventTvMovie
     */
    public static function getTvByEventId($event_id)
    {
        if (!empty($event_id)) {
            $query = Doctrine_Query::create()
                ->from('ExhibEventTvMovie etm')
                ->where(' etm.id_event = ?', [$event_id])
                ->orderBy('etm.tv_number')
            ;

            return $query->execute();
        }

        return false;
    }

    /**
     * @param int   $tv_number
     * @param mixed $id_exhib_event_tv_movie
     *
     * @return ExhibEventTvMovie
     */
    public static function getOneByIdTv($id_exhib_event_tv_movie)
    {
        $query = Doctrine_Query::create()
            ->from('ExhibEventTvMovie etm')
            ->where('etm.id_exhib_event_tv_movie = ? ', [$id_exhib_event_tv_movie])
        ;

        return $query->execute()->getFirst();
    }

    public function preDelete($event)
    {
        if (!empty($this->tv_number)) {
            $pre_tv_name = $this->getTvMovieName($this->tv_number);
            if (!empty($pre_tv_name)) {
                $this->deleteViewFile($pre_tv_name);
            }
        }
    }
}
