<?php

/**
 * ExhibStandParticipation.
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @author     ##NAME## <##EMAIL##>
 *
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class ExhibStandParticipation extends Table_ExhibStandParticipation
{
    public function getId()
    {
        return $this->id_exhib_stand_participation;
    }

    public function setIdExhibStand($value)
    {
        $this->id_exhib_stand = $value;
    }

    public function getIdExhibParticipation()
    {
        return $this->id_exhib_participation;
    }

    public function setIdExhibParticipation($value)
    {
        $this->id_exhib_participation = $value;
    }

    public function getHash()
    {
        return $this->hash;
    }

    public function setHash($value)
    {
        $this->hash = $value;
    }

    public function setUserLimit($limit)
    {
        $this->videoconference_userlimit = $limit;
    }

    /**
     * @param string $hash
     *
     * @return ExhibStandParticipation
     */
    public static function findOneByHash($hash)
    {
        $query = Doctrine_Query::create()
            ->from('ExhibStandParticipation sp')
            ->leftJoin('sp.ExhibParticipation ep')
            ->where('sp.hash = ?', [$hash])
    ;

        return $query->execute()->getFirst();
    }

    public static function findOneById($id)
    {
        $query = Doctrine_Query::create()
            ->from('ExhibStandParticipation sp')
            ->where('sp.id_exhib_stand_participation = ?', $id)
    ;

        return $query->execute();
    }

    /**
     * @param array $hash
     *
     * @return ExhibStandParticipation
     */
    public static function findManyByHashArray($hash)
    {
        $query = Doctrine_Query::create()
            ->from('ExhibStandParticipation sp')
            ->where('sp.hash IN ?', [$hash])
        ;

        return $query->execute();
    }

    /**
     * @param string $id_base_user
     * @param mixed  $id_event
     *
     * @return ExhibStandParticipation
     */
    public static function findConferences($id_base_user, $id_event)
    {
        $query = Doctrine_Query::create()
            ->from('ExhibStandParticipation sp')
            ->leftJoin('sp.ExhibParticipation p')
            ->where('sp.is_active = 1 AND p.id_base_user = ? AND p.id_event = ?', [$id_base_user, $id_event])
    ;

        return $query->execute();
    }

    /**
     * @param string $id_base_user
     * @param mixed  $id_event
     *
     * @return ExhibStandParticipation
     */
    public static function findConferencesHall($id_base_user, $id_event)
    {
        $query = Doctrine_Query::create()
            ->from('ExhibStandParticipation sp')
            ->leftJoin('sp.ExhibParticipation p')
            ->leftJoin('sp.ExhibStand s')
            ->where(
                'sp.is_active = 1 AND p.id_base_user = ? AND p.id_event = ? AND s.id_exhib_stand_type = ?',
                [$id_base_user, $id_event, ExhibStandType::CONFERENCE_HALL]
            )
    ;

        return $query->execute();
    }

    /**
     * @param string $id_base_user
     * @param mixed  $id_event
     *
     * @return ExhibStandParticipation
     */
    public static function findConferencesForEvent($id_base_user, $id_event)
    {
        $query = Doctrine_Query::create()
            ->from('ExhibStandParticipation sp')
            ->leftJoin('sp.ExhibParticipation p')
            ->leftJoin('ExhibConferences ec ON sp.id_exhib_conference = ec.id_exhib_conferences')
            ->leftJoin('sp.ExhibStand s')
            ->where(
                'sp.is_active = 1 AND p.id_base_user = ? AND p.id_event = ? AND s.id_exhib_stand_type = ?',
                [$id_base_user, $id_event, ExhibStandType::CONFERENCE_HALL]
            )
    ;

        return $query->execute();
    }

    /**
     * @param string   $hash
     * @param Language $language
     *
     * @return ExhibStandParticipation
     */
    public static function findOneConferenceHall($hash, $language = null)
    {
        $query = Doctrine_Query::create()
            ->from('ExhibStandParticipation sp')
            ->leftJoin('sp.ExhibParticipation p')
            ->leftJoin('sp.ExhibStand s')
            ->where(
                'sp.is_active = 1 AND sp.hash = ? AND s.id_exhib_stand_type = ?',
                [$hash, ExhibStandType::CONFERENCE_HALL]
            )
    ;

        return $query->execute()->getFirst();
    }

    public static function findManyByStandHash($stand_hash)
    {
        $query = Doctrine_Query::create()
            ->from('ExhibStandParticipation sp')
            ->leftJoin('sp.ExhibStand s')
            ->leftJoin('sp.ExhibParticipation p')
            ->leftJoin('p.User u')
            ->where('sp.is_active = 1 AND s.is_active = 1 AND p.is_active = 1 AND s.hash = ?', [$stand_hash])
    ;

        return $query->execute();
    }

    public static function findManyByStandHashUserJoin($stand_hash)
    {
        $query = Doctrine_Query::create()
            ->from('ExhibStandParticipation sp')
            ->leftJoin('sp.ExhibStand s')
            ->leftJoin('sp.ExhibParticipation p')
            ->leftJoin('p.User u')
            ->where('u.is_active = 1 AND s.is_active = 1 AND p.is_active = 1 AND s.hash = ?', [$stand_hash])
    ;

        return $query->execute();
    }

    /**
     * @param int   $id_exhib_participation
     * @param int   $id_stand
     * @param mixed $id_exhib_stand
     *
     * @return ExhibStandParticipation
     */
    public static function findOneByIdParticipationAndIdStand($id_exhib_participation, $id_exhib_stand)
    {
        return Doctrine_Query::create()
            ->from('ExhibStandParticipation sp')
            ->where(
                'sp.is_active = 1 AND sp.id_exhib_participation = ? AND sp.id_exhib_stand = ?',
                [$id_exhib_participation, $id_exhib_stand]
            )
            ->limit(1)
            ->execute()
            ->getFirst()
        ;
    }

    public static function findOneByStandAndParticipation($participation_hash, $stand_hash)
    {
        $query = Doctrine_Query::create()
            ->from('ExhibStandParticipation sp')
            ->leftJoin('sp.ExhibStand s')
            ->leftJoin('sp.ExhibParticipation p')
            ->where('sp.is_active = 1 AND s.hash = ? AND p.hash = ?', [$stand_hash, $participation_hash])
    ;

        return $query->execute()->getFirst();
    }

    public static function findConferenceHallParticipations($id_exhib_stand, $stand_participation_hash, $id_exhib_participation)
    {
        $query = Doctrine_Query::create()
            ->from('ExhibStandParticipation esp')
            ->leftJoin('esp.ExhibParticipation ep')
            ->where('esp.hash = ? AND ep.hash = ? AND esp.id_exhib_stand = ?', [$stand_participation_hash, $id_exhib_participation, $id_exhib_stand])
        ;

        return $query->execute()->getFirst();
    }

    public static function findParticipationsForStand($stand_hash)
    {
        $query = Doctrine_Query::create()
            ->from('ExhibStandParticipation sp')
            ->leftJoin('sp.ExhibStand s')
            ->leftJoin('sp.ExhibParticipation p')
            ->where('sp.is_active = 1 AND s.is_active = 1 AND p.is_active = 1 AND s.hash = ?', [$stand_hash])
    ;

        return $query->execute();
    }
}
