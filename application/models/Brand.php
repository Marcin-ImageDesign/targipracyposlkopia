<?php

/**
 * Brand.
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @author     ##NAME## <##EMAIL##>
 *
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Brand extends Table_Brand
{
    const PREFIX = '-';

    private static $_brand = null;

    /**
     * @param string $hash Hash elementu
     *
     * @return Brand
     */
    public static function findOneByHash($hash)
    {
        return Doctrine::getTable('Brand')->findOneByHash($hash);
    }

    /**
     * @return mixed Array To Form
     *
     * @todo Language Support
     */
    public function getArrayToForm()
    {
        $data = [];
        $data['name'] = $this->getName();
        $data['parent'] = $this->id_brand_parent;

        return $data;
    }

    public function addChildrenToArray(array &$array)
    {
        if ($this->ChildBrands->count() > 0) {
            foreach ($this->ChildBrands as $brand) {
                $array[$brand->getId()] = $brand->getNameWithDashes();
                if ($brand->ChildBrands->count() > 0) {
                    $brand->addChildrenToArray($array);
                }
            }
        }
    }

    public function addChildrenToArrayHashed(array &$array)
    {
        if ($this->ChildBrands->count() > 0) {
            foreach ($this->ChildBrands as $brand) {
                $array[$brand->getHash()] = $brand->getNameWithDashes();
                if ($brand->ChildBrands->count() > 0) {
                    $brand->addChildrenToArrayHashed($array);
                }
            }
        }
    }

    public function getPrefix()
    {
        if (!$this->id_brand_parent) {
            return '';
        }

        return self::PREFIX . $this->BrandParent->getPrefix();
    }

    public function getNameWithDashes()
    {
        $prefix = $this->getPrefix();

        return $prefix . $this->getName();
    }

//        public function getHash(){
//            return $this->hash;
//        }

//        public function isNew(){
//            return $this->id_brand == null;
//        }

//        public function setName( $name ){
//            $this->name = $name;
//        }

    /**
     * @param mixed $id
     *
     * @return brand
     */
    public static function find($id, $id_language = null, $tableName = null)
    {
        return Doctrine::getTable('Brand')->find($id);
    }

//        public function getId(){
//            return $this->id_brand;
//        }

    public function isActive()
    {
        return $this->is_active;
    }

    public function setIsActive($active)
    {
        $this->is_active = $active;
    }

    public static function getBrandList($event_id)
    {
        if (null === self::$_brand) {
            $brandList = Doctrine_Query::create()
                ->select('b.id_brand, bt.name')
                ->from('Brand b INDEXBY b.id_brand')
                ->innerJoin('b.Translations bt WITH bt.id_language = ? INDEXBY bt.id_language', Engine_I18n::getLangId())
                ->innerJoin('b.EventHasBrand ehb')
                ->innerJoin('b.ExhibStandHasBrand')
                ->where('ehb.id_event = ?', $event_id)
                ->addWhere('b.is_active = 1')
                ->orderBy('bt.name ASC')
                ->fetchArray()
            ;

            foreach ($brandList as $key => $brandRow) {
                self::$_brand[$key] = $brandRow['Translations'][Engine_I18n::getLangId()]['name'];
            }
        }

        return self::$_brand;
    }

    public static function getFullBrandList($event_id)
    {
        if (null === self::$_brand) {
            $brandList = Doctrine_Query::create()
                ->select('b.id_brand, bt.name')
                ->from('Brand b INDEXBY b.id_brand')
                ->innerJoin('b.Translations bt WITH bt.id_language = ? INDEXBY bt.id_language', Engine_I18n::getLangId())
                ->innerJoin('b.EventHasBrand ehb')
                ->where('ehb.id_event = ?', $event_id)
                ->addWhere('b.is_active = 1')
                ->orderBy('bt.name ASC')
                ->fetchArray()
            ;

            foreach ($brandList as $key => $brandRow) {
                self::$_brand[$key] = $brandRow['Translations'][Engine_I18n::getLangId()]['name'];
            }
        }

        return self::$_brand;
    }

    public static function getBrandName($brand_id)
    {
        return self::$_brand[$brand_id];
    }

    public static function getBrandChildren($brand_id)
    {
        $children = Doctrine_Query::create()
            ->select('b.id_brand')
            ->from('Brand b')
            ->where('b.is_active = 1')
            ->addWhere('b.id_brand_parent = ?', [$brand_id])
            ->execute()
        ;

        if ($children->count() > 0) {
            return $children->toKeyValueArray('id_brand', 'id_brand');
        }

        return null;
    }
}
